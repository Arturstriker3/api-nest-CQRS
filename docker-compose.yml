version: '3.8'
x-postgres-common: &postgres-common
 image: postgres:17-alpine
 user: postgres
 restart: always
 healthcheck:
  test: 'pg_isready -U admin --dbname=postgres'
  interval: 10s
  timeout: 5s
  retries: 5

services:
 postgres_primary:
  <<: *postgres-common
  ports:
   - 5433:5432
  environment:
   POSTGRES_USER: admin
   POSTGRES_DB: postgres
   POSTGRES_PASSWORD: admin
   POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
   POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
  command: |
   postgres 
   -c wal_level=logical 
   -c hot_standby=on 
   -c max_wal_senders=10 
   -c max_replication_slots=10 
   -c hot_standby_feedback=on
  volumes:
   - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
   - postgres_primary_data:/var/lib/postgresql/data

 postgres_replica:
  <<: *postgres-common
  ports:
   - 5434:5432
  environment:
   PGUSER: replicator
   PGPASSWORD: replicator_password
  command: |
   bash -c "
   if [ -f /var/lib/postgresql/data/PG_VERSION ]; then
     echo 'Replica data directory already exists, starting PostgreSQL...'
     chmod 0700 /var/lib/postgresql/data
     postgres
   else
     until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=postgres_primary --port=5432
     do
       echo 'Waiting for primary to connect...'
       sleep 1s
     done
     echo 'Backup done, starting replica...'
     chmod 0700 /var/lib/postgresql/data
     postgres
   fi
   "
  volumes:
   - postgres_replica_data:/var/lib/postgresql/data
  depends_on:
   - postgres_primary

volumes:
 postgres_primary_data:
 postgres_replica_data:
